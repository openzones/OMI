@model OMInsurance.WebApps.Models.ReferenceUniversalItemModel
@{
    ViewBag.Title = "DeliveryCenterEditItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.Id == 0 || Model.Id == null)
{
    <h3>Добавление новой записи в справочник @OMInsurance.WebApps.Models.ReferenceUniversalItemModel.ReferenceDisplayName</h3>
}
else
{
    <h3>Редактирование записи в справочнике @OMInsurance.WebApps.Models.ReferenceUniversalItemModel.ReferenceDisplayName</h3>
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.ReferenceName)
    <div class="row margined">
        <div class="col-md-5">
            <table class="table table-striped table-condensed ">
                <tr>
                    <td>@Html.DisplayNameFor(item => item.Id)</td>
                    <td>
                        @if (Model.Id == 0 || Model.Id == null)
                        {
                            @Html.TextBoxFor(model => model.Id, new { @class = "form-control", required = "required" })
                        }
                        else
                        {
                            @Html.DisplayFor(item => item.Id)
                        }
                    </td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(item => item.Name)</td>
                    <td>@Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.Code)</td>
                    <td>@Html.TextBoxFor(model => model.Code, new { @class = "form-control", required = "required", MaxLength = "3", OnKeyPress = "EnsureNumeric()" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.DisplayName)</td>
                    <td>@Html.TextBoxFor(model => model.DisplayName, new { @class = "form-control", required = "required" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.District)</td>
                    <td>@Html.TextBoxFor(model => model.District, new { @class = "form-control", MaxLength = "50" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.SMO)</td>
                    <td>@Html.TextBoxFor(model => model.SMO, new { @class = "form-control", MaxLength = "5" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.Address)</td>
                    <td>@Html.TextBoxFor(model => model.Address, new { @class = "form-control" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.Phone)</td>
                    <td>@Html.TextBoxFor(model => model.Phone, new { @class = "form-control", MaxLength = "100" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.WorkHours)</td>
                    <td>@Html.TextBoxFor(model => model.WorkHours, new { @class = "form-control" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.ParentId)</td>
                    <td>@Html.TextBoxFor(model => model.ParentId, new { @class = "form-control" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.IsDigitPolicyAbailable)</td>
                    <td>@Html.EditorFor(model => model.IsDigitPolicyAbailable, new { @class = "form-control", required = "required" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.IsEnabledForOperator)</td>
                    <td>@Html.EditorFor(model => model.IsEnabledForOperator, new { @class = "form-control", required = "required" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.IsEnabledForRegistrator)</td>
                    <td>@Html.EditorFor(model => model.IsEnabledForRegistrator, new { @class = "form-control", required = "required" })</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.IsMFC)</td>
                    <td>@Html.EditorFor(model => model.IsMFC, new { @class = "form-control", required = "required" })</td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row margined">
        <div class="form-group">
            <div class="col-md-2">
                @if (Model.Id == 0 || Model.Id == null)
                {
                    <input type="submit" value="Добавить новую запись" class="btn btn-default" />
                }
                else
                {
                    <input type="submit" value="Обновить" class="btn btn-default" />
                }
            </div>
        </div>
    </div>
}
<script language="Javascript">
    function EnsureNumeric() {
        var key = window.event.keyCode;
        if (key < 48 || key > 57)
            window.event.returnValue = false;
    }
</script> 