@model OMInsurance.WebApps.Models.BSOListModel
@using OMInsurance.WebApps.Helpers
@Html.HiddenFor(m => m.Items)
@Html.HiddenFor(m => m.TotalCount)
@Html.HiddenFor(m => m.SearchCriteriaModel.DeliveryCenterIds)

@if ((Model.FlagPrintReport > 0) && (User.IsInRole(OMInsurance.Entities.Core.Role.Administrator.Name)
                                  || User.IsInRole(OMInsurance.Entities.Core.Role.AdministratorBSO.Name)))
{
    <div class="container">
        <div class="row margined">
            <div class="col-md-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="clickable panel-title">Требование-накладная</h3>
                        <span class="pull-right"><i class="glyphicon glyphicon-chevron-up"></i></span>
                    </div>
                    <div class="panel-body collapse in">
                        <div class="container">
                            @using (@Html.BeginForm("GetBSOInvoiceS", "PrintedForms"))
                            {

                                <div class="margined row">
                                    <div class="col-md-2">
                                        @Html.Label("Изменились")
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DisplayFor(model => model.FlagPrintReport) БСО
                                    </div>
                                    @Html.HiddenFor(m => m.SearchCriteriaModel.TemporaryPolicyNumberFrom)
                                    @Html.HiddenFor(m => m.SearchCriteriaModel.TemporaryPolicyNumberTo)
                                    @Html.HiddenFor(m => m.SearchCriteriaModel.CurrentStatusId)
                                    @Html.HiddenFor(m => m.SearchCriteriaModel.PolicyPartyNumber)
                                    @Html.HiddenFor(m => m.SearchCriteriaModel.NewDeliveryPointId)
                                    @Html.HiddenFor(m => m.SearchCriteriaModel.NewResponsibleID)
                                    <div class="col-md-2">
                                        <input class="btn btn-default"
                                               type="submit"
                                               value="Печать накладной" />
                                    </div>
                                </div>
                                <div class="row margined">
                                    <div class="col-md-11">
                                        @Html.Partial("_Message", "Распечатайте накладную!")
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<div id="clientVisitContainer">
@using (Ajax.BeginForm("MassChanges", "BSO",
                                                        new AjaxOptions
                                                        {
                                                            HttpMethod = "POST",
                                                            UpdateTargetId = "clientVisitContainer",
                                                            InsertionMode = InsertionMode.Replace,
                                                        },
                                                        new { id = string.Format("clientVisitForm{0}", Model.SearchCriteriaModel.StatusId) }))
{
    if (Model.SearchCriteriaModel.Messages.Count > 0)
    {
            <div class="row margined">
                <div class="col-md-12">
                    <div class="alert alert-danger" role="alert">
                        @foreach (var message in Model.SearchCriteriaModel.Messages)
                        {
                            <span>@message<br /></span>
                        }
                    </div>
                </div>
            </div>
    }
        <input data-val="false" id="CreateDate" name="CreateDate" type="hidden" value="@Model.SearchCriteriaModel.StatusDateFrom">

            <div class="container">
                <div class="row margined">
                    <div class="col-md-12">
                            @if (Model.SearchCriteriaModel.StatusId == null)
                            {
                                <div class="alert alert-danger" role="alert">
                                    Чтобы воспользоваться формой, укажите выше в поисковой форме статус БСО
                                </div>
                            }
                     </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.SearchCriteriaModel.TemporaryPolicyNumberFrom) ||
                    !string.IsNullOrEmpty(Model.SearchCriteriaModel.TemporaryPolicyNumberTo) ||
                    !string.IsNullOrEmpty(Model.SearchCriteriaModel.PolicyPartyNumber))
                {
                    <div class="row margined">
                        <div class="form-group-md">
                            <div class="col-md-2">
                                @Html.DisplayNameFor(model => Model.SearchCriteriaModel.TemporaryPolicyNumberFrom)
                                @Html.HiddenFor(m => m.SearchCriteriaModel.TemporaryPolicyNumberFrom)
                                @Html.TextBoxFor(model => Model.SearchCriteriaModel.TemporaryPolicyNumberFrom, new { @class = "form-control", maxlength = "9", disabled = "disabled" })
                                @Html.ValidationMessageFor(model => Model.SearchCriteriaModel.TemporaryPolicyNumberFrom)
                            </div>
                            <div class="col-md-2">
                                @Html.DisplayNameFor(model => Model.SearchCriteriaModel.TemporaryPolicyNumberTo)
                                @Html.HiddenFor(m => m.SearchCriteriaModel.TemporaryPolicyNumberTo)
                                @Html.TextBoxFor(model => Model.SearchCriteriaModel.TemporaryPolicyNumberTo, new { @class = "form-control", maxlength = "9", disabled = "disabled" })
                                @Html.ValidationMessageFor(model => Model.SearchCriteriaModel.TemporaryPolicyNumberTo)
                            </div>
                            <div class="col-md-2">
                                @Html.DisplayNameFor(model => Model.SearchCriteriaModel.PolicyPartyNumber)
                                @Html.HiddenFor(m => m.SearchCriteriaModel.PolicyPartyNumber)
                                @Html.TextBoxFor(model => Model.SearchCriteriaModel.PolicyPartyNumber, new { @class = "form-control", maxlength = "3", disabled = "disabled" })
                                @Html.ValidationMessageFor(model => Model.SearchCriteriaModel.PolicyPartyNumber)
                            </div>
                        </div>
                    </div>
                }
                <div class="row margined">
                    <div class="form-group-md">
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => Model.SearchCriteriaModel.StatusId)
                            @Html.DropDownListFor(model => model.SearchCriteriaModel.StatusId,
                                Model.listBSOStatuses, new { @class = "form-control", disabled = "disabled" })
                            @Html.HiddenFor(m => m.SearchCriteriaModel.StatusId)
                        </div>
                        <div class="col-md-3">
                            <div>
                                изменить на
                                @if (Model.SearchCriteriaModel.StatusId == null)
                                {
                                    @Html.DropDownListFor(model => model.SearchCriteriaModel.CurrentStatusId,
                                    Model.listBSOStatusesAvailable, new { @class = "form-control", disabled = "disabled" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SearchCriteriaModel.CurrentStatusId,
                                    Model.listBSOStatusesAvailable, new { @class = "form-control" })
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row margined">
                    <div class="form-group-md">
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => Model.SearchCriteriaModel.ResponsibleID)
                            @Html.DropDownListFor(model => model.SearchCriteriaModel.ResponsibleID,
                                Model.listBSOResponsibles, new { @class = "form-control", disabled = "disabled" })
                            @Html.HiddenFor(model => model.SearchCriteriaModel.ResponsibleID)
                        </div>
                        <div class="col-md-3">
                            <div>
                                изменить на
                                @if (User.IsInRole(OMInsurance.Entities.Core.Role.Registrator.Name) &&
                                    !User.IsInRole(OMInsurance.Entities.Core.Role.ResponsibleBSO.Name) &&
                                    !User.IsInRole(OMInsurance.Entities.Core.Role.Administrator.Name) &&
                                    !User.IsInRole(OMInsurance.Entities.Core.Role.AdministratorBSO.Name))
                                {
                                    @Html.DropDownListFor(model => model.SearchCriteriaModel.NewResponsibleID,
                                        Model.listBSOResponsibles, new { @class = "form-control"})
                                    @Html.HiddenFor(model => model.SearchCriteriaModel.NewResponsibleID)
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SearchCriteriaModel.NewResponsibleID,
                                        Model.listBSOResponsibles, new { @class = "form-control" })
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row margined">
                    <div class="form-group-md">
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => Model.SearchCriteriaModel.DeliveryPointIds)
                            @Html.HiddenFor(m => m.SearchCriteriaModel.DeliveryPointIds)
                            @Html.ListBoxFor(model => model.SearchCriteriaModel.DeliveryPointIds,
                                Model.DeliveryPoints, new { @class = "form-control multiselect", disabled = "disabled" })
                            
                        </div>
                        <div class="col-md-3">
                            <div>
                                изменить на
                                @if (Model.SearchCriteriaModel.StatusId == null)
                                {
                                    @Html.DropDownListFor(model => model.SearchCriteriaModel.NewDeliveryPointId,
                                        Model.DeliveryPoints, new { @class = "form-control", disabled = "disabled" })
                                    @Html.HiddenFor(m => m.SearchCriteriaModel.NewDeliveryPointId)
                                }
                                else
                                {
                                    if (User.IsInRole(OMInsurance.Entities.Core.Role.Registrator.Name) &&
                                       !User.IsInRole(OMInsurance.Entities.Core.Role.ResponsibleBSO.Name) &&
                                       !User.IsInRole(OMInsurance.Entities.Core.Role.Administrator.Name) &&
                                       !User.IsInRole(OMInsurance.Entities.Core.Role.AdministratorBSO.Name))
                                    {
                                        @Html.DropDownListFor(model => model.SearchCriteriaModel.NewDeliveryPointId,
                                        Model.DeliveryPoints, new { @class = "form-control", disabled = "disabled" })
                                        @Html.HiddenFor(model => model.SearchCriteriaModel.NewDeliveryPointId)
                                    }
                                    else
                                    {
                                            @Html.DropDownListFor(model => model.SearchCriteriaModel.NewDeliveryPointId,
                                                Model.DeliveryPoints, new { @class = "form-control" })
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row margined">
                    <div class="form-group-md">
                        <div class="col-md-3">
                            <div>&nbsp;</div>
                            Новая дата статуса (можно оставить пустой)
                        </div>
                        <div class="col-md-3">
                            <div>&nbsp;</div>
                            <div>
                                @if (Model.SearchCriteriaModel.StatusId == null)
                                {
                                   @Html.EditorFor(model => model.SearchCriteriaModel.NewStatusDate, new { @class = "form-control", disabled = "disabled" })
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.SearchCriteriaModel.NewStatusDate, new { @class = "form-control" })
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row margined">
                    <div class="form-group-md">
                        <div class="col-md-2">
                            Будет изменено
                        </div>
                        <div class="col-md-2">
                            @Html.HiddenFor(m => m.TotalCount)
                            @Html.DisplayFor(model => model.TotalCount) БСО
                            @Html.HiddenFor(m => m.TotalCount)
                        </div>
                        <div class="col-md-2">
                            @if (Model.SearchCriteriaModel.StatusId == null)
                            {
                                <button type="submit" id="btnSaveProject" class="btn btn-primary" disabled="disabled">Применить изменения</button>
                            }
                            else
                            {
                                <button type="submit" id="btnSaveProject" class="btn btn-primary" onclick='{ return Validation.validate(event) }'>Применить изменения</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        <div class="row margined">
            <div class="col-md-12">
                @if (Model.SearchCriteriaModel.IsSuccessfullySaved.HasValue)
                {
                    if (!Model.SearchCriteriaModel.IsSuccessfullySaved.Value)
                    {
                        @Html.Partial("_ErrorMessage", "Внимание! Никаких изменений не произошло.")
                    }
                    else
                    {
                        @Html.Partial("_Message", "БСО успешно изменено(ы). При необходимости обновите страницу.")
                    }
                }
            </div>
        </div>
}
</div>
<script>$.validator.unobtrusive.addValidation("#@string.Format("clientVisitForm{0}", Model.SearchCriteriaModel.StatusId)")</script>
